{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "04CC - API#1359 Pension Scheme Subscription - Request Schema",
  "type": "object",
  "properties": {
    "schemeMigrationDetails": {
      "required": [
        "pstrOrTpssId",
        "registrationStartDate",
        "psaRelationshipStartDate"
      ],
      "type": "object",
      "properties": {
        "pstrOrTpssId": {
          "type": "string",
          "pattern": "^[0-9]{8}[A-Z]{2}$",
          "description": "PSTR Or TPSS ID"
        },
        "registrationStartDate": {
          "$ref": "#/definitions/dateType"
        },
        "psaRelationshipStartDate": {
          "$ref": "#/definitions/dateType"
        }
      }
    },
    "racdacScheme": {
      "type": "boolean",
      "description": "This property determines whethere the Scheme is RACDAC or non-RACDAC. true = RACDAC Scheme, false = non-RACDAC Scheme"
    },
    "racdacSchemeDetails": {
      "type": "object",
      "description": "This node is mandatory , if RACDACScheme = true",
      "properties": {
        "racdacName": {
          "$ref": "#/definitions/orgOrReasonType"
        },
        "contractOrPolicyNumber": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9À-ÿ !#$%&'‘’\"“”«»()*+,./:;=?@\\[\\]|~£€¥\\u005C—–‐_^`-]{1,50}$"
        },
        "registrationStartDate": {
          "$ref": "#/definitions/dateType"
        }
      },
      "required": [
        "racdacName",
        "contractOrPolicyNumber"
      ]
    },
    "customerAndSchemeDetails": {
      "description": "This node is mandatory, if RACDACScheme = false OR RACDACScheme data element not provided",
      "type": "object",
      "properties": {
        "schemeName": {
          "$ref": "#/definitions/orgOrReasonType"
        },
        "isSchemeMasterTrust": {
          "description": "true for yes, false for No",
          "type": "boolean"
        },
        "schemeStructure": {
          "description": "type and structure of the scheme",
          "type": "string",
          "enum": [
            "A single trust under which all of the assets are held for the benefit of all members of the scheme",
            "A group life/death in service scheme",
            "A body corporate",
            "Other"
          ]
        },
        "otherSchemeStructure": {
          "$ref": "#/definitions/orgOrReasonType"
        },
        "haveMoreThanTenTrustee": {
          "description": "true for yes, false for No",
          "type": "boolean"
        },
        "currentSchemeMembers": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2 to 11",
            "12 to 50",
            "51 to 10,000",
            "More than 10,000"
          ]
        },
        "futureSchemeMembers": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2 to 11",
            "12 to 50",
            "51 to 10,000",
            "More than 10,000"
          ]
        },
        "isRegulatedSchemeInvestment": {
          "description": "true for yes, false for No",
          "type": "boolean"
        },
        "isOccupationalPensionScheme": {
          "description": "true for yes, false for No",
          "type": "boolean"
        },
        "areBenefitsSecuredContractInsuranceCompany": {
          "description": "true for yes, false for No",
          "type": "boolean"
        },
        "doesSchemeProvideBenefits": {
          "description": "01-Money Purchase benefits only (defined contribution), 02-Defined Benefits only, 03-Mixture of money purchase benefits and defined benefits",
          "type": "string",
          "enum": [
            "Money Purchase benefits only (defined contribution)",
            "Defined Benefits only",
            "Mixture of money purchase benefits and defined benefits"
          ]
        },
        "tcmpBenefitType": {
          "description": "Mandatory, If doesSchemeProvideBenefits field value is either Money Purchase benefits only (defined contribution) or Defined Benefits only. 01 - Collective money purchase benefits, 02- Cash balance benefits, 03 -Other money purchase benefits, 04 - Mixture of Collective money purchase benefits and cash balance and/or other money purchase benefits, 05 - Mixture of Cash balance benefits and other money purchase benefits ",
          "type": "string",
          "enum": [
            "01",
            "02",
            "03",
            "04",
            "05"
          ]
        },
        "schemeEstablishedCountry": {
          "$ref": "#/definitions/countryCodes"
        },
        "haveInvalidBank": {
          "description": "true for yes, false for No",
          "type": "boolean"
        },
        "insuranceCompanyName": {
          "$ref": "#/definitions/orgOrReasonType"
        },
        "policyNumber": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9À-ÿ !#$%&'‘’\"“”«»()*+,./:;=?@\\[\\]|~£€¥\\u005C—–‐_^`-]{1,55}$"
        },
        "insuranceCompanyAddress": {
          "$ref": "#/definitions/addressType"
        }
      },
      "required": [
        "schemeName",
        "isSchemeMasterTrust",
        "currentSchemeMembers",
        "futureSchemeMembers",
        "isRegulatedSchemeInvestment",
        "isOccupationalPensionScheme",
        "areBenefitsSecuredContractInsuranceCompany",
        "doesSchemeProvideBenefits",
        "schemeEstablishedCountry",
        "haveInvalidBank"
      ],
      "additionalProperties": false
    },
    "pensionSchemeDeclaration": {
      "type": "object",
      "description": "This node is mandatory, if RACDACScheme = false OR RACDACScheme data element not provided",
      "properties": {
        "box1": {
          "description": "true : Selected, false: Not Selected",
          "type": "boolean"
        },
        "box2": {
          "description": "true : Selected, false: Not Selected",
          "type": "boolean"
        },
        "box3": {
          "description": "true : Selected, false: Not Selected. Mandatory when isSchemeMasterTrust field value is yes",
          "type": "boolean"
        },
        "box4": {
          "description": "true : Selected, false: Not Selected. Mandatory when schemeEstablishedCountry field selected with value. true-Selected,false-Not Selected . Either PSDeclarationBox4 OR  PSDeclarationBox5 is Mandatory if scheme establishers is 02-Company/Org. ETMP is not expecting these DeclarationBoxs if there is no 02-Company/Org establisher. So in the schema it will be always either PSDeclarationBox04 OR PSDeclarationBox05 and not both.",
          "type": "boolean"
        },
        "box5": {
          "description": "true : Selected, false: Not Selected. Mandatory when schemeEstablishedCountry field selected with value. true-Selected,false-Not Selected . Either PSDeclarationBox4 OR  PSDeclarationBox5 is Mandatory if scheme establishers is 02-Company/Org . ETMP is not expecting these DeclarationBoxs if there is no 02-Company/Org establisher. So in the schema it will be always either PSDeclarationBox04 OR PSDeclarationBox05 and not both.",
          "type": "boolean"
        },
        "box6": {
          "description": " true : Selected, false: Not Selected",
          "type": "boolean"
        },
        "box7": {
          "description": " true : Selected, false: Not Selected",
          "type": "boolean"
        },
        "box8": {
          "description": " true : Selected, false: Not Selected",
          "type": "boolean"
        },
        "box9": {
          "description": " true : Selected, false: Not Selected",
          "type": "boolean"
        },
        "box10": {
          "description": " true : Selected, false: Not Selected. box10 or box11 should be selected",
          "type": "boolean"
        },
        "box11": {
          "description": " true : Selected, false: Not Selected. box10 or box11 should be selected",
          "type": "boolean"
        },
        "pensionAdviserName": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9À-ÿ !#$%&'‘’\"“”«»()*+,./:;=?@\\[\\]|~£€¥\\u005C—–‐_^`-]{1,107}$"
        },
        "addressAndContactDetails": {
          "type": "object",
          "properties": {
            "addressDetails": {
              "$ref": "#/definitions/addressType"
            },
            "contactDetails": {
              "$ref": "#/definitions/contactDetailsType"
            }
          },
          "required": [
            "addressDetails",
            "contactDetails"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "box6",
        "box7",
        "box8"
      ],
      "additionalProperties": false
    },
    "racdacSchemeDeclaration": {
      "type": "object",
      "description": "This node is mandatory , if RACDACScheme = true",
      "properties": {
        "box12": {
          "description": "true-Selected,false-Not Selected , this is Mandatory if RACDAC Scheme is true",
          "type": "boolean"
        },
        "box13": {
          "description": "true-Selected,false-Not Selected , this is Mandatory if RACDAC Scheme is true",
          "type": "boolean"
        },
        "box14": {
          "description": "true-Selected,false-Not Selected , this is Mandatory if RACDAC Scheme is true",
          "type": "boolean"
        }
      },
      "required": [
        "box12",
        "box13",
        "box14"
      ]
    },
    "establisherDetails": {
      "type": "object",
      "description": "This node is mandatory, if RACDACScheme = false OR RACDACScheme data element not provided",
      "properties": {
        "individual": {
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "object",
            "properties": {
              "personalDetails": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "enum": [
                      "Mr",
                      "Mrs",
                      "Miss",
                      "Ms",
                      "Dr",
                      "Sir",
                      "Professor",
                      "Lord"
                    ]
                  },
                  "firstName": {
                    "$ref": "#/definitions/nameType"
                  },
                  "middleName": {
                    "$ref": "#/definitions/nameType"
                  },
                  "lastName": {
                    "$ref": "#/definitions/nameType"
                  },
                  "dateOfBirth": {
                    "$ref": "#/definitions/dateType"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "dateOfBirth"
                ],
                "additionalProperties": false
              },
              "referenceOrNino": {
                "type": "string",
                "pattern": "(^[0-9a-zA-Z]{1,9}|((?!(BG|GB|KN|NK|NT|TN|ZZ)|(D|F|I|Q|U|V)[A-Z]|[A-Z](D|F|I|O|Q|U|V))[A-Z]{2})[0-9]{6}[A-D]?)$"
              },
              "noNinoReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "utr": {
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "noUtrReason": {
                "type": "string",
                "$ref": "#/definitions/orgOrReasonType"
              },
              "correspondenceAddressDetails": {
                "type": "object",
                "properties": {
                  "addressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "addressDetails"
                ],
                "additionalProperties": false
              },
              "correspondenceContactDetails": {
                "type": "object",
                "properties": {
                  "contactDetails": {
                    "$ref": "#/definitions/contactDetailsType"
                  }
                },
                "required": [
                  "contactDetails"
                ],
                "additionalProperties": false
              },
              "previousAddressDetails": {
                "type": "object",
                "properties": {
                  "isPreviousAddressLast12Month": {
                    "type": "boolean"
                  },
                  "previousAddressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "isPreviousAddressLast12Month"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "personalDetails",
              "correspondenceAddressDetails",
              "correspondenceContactDetails"
            ],
            "additionalProperties": false
          }
        },
        "companyOrOrganization": {
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "object",
            "properties": {
              "organizationName": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "utr": {
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "noUtrReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "crnNumber": {
                "type": "string",
                "pattern": "^[A-Za-z0-9 -]{1,8}$"
              },
              "noCrnReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "vatRegistrationNumber": {
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "payeReference": {
                "type": "string",
                "pattern": "^[0-9]{3}[0-9A-Za-z]{1,13}$"
              },
              "haveMoreThanTenDirectorOrPartner": {
                "description": "true: Yes, false: No",
                "type": "boolean"
              },
              "correspondenceAddressDetails": {
                "type": "object",
                "properties": {
                  "addressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "addressDetails"
                ],
                "additionalProperties": false
              },
              "correspondenceContactDetails": {
                "type": "object",
                "properties": {
                  "contactDetails": {
                    "$ref": "#/definitions/contactDetailsType"
                  }
                },
                "required": [
                  "contactDetails"
                ],
                "additionalProperties": false
              },
              "previousAddressDetails": {
                "type": "object",
                "properties": {
                  "isPreviousAddressLast12Month": {
                    "type": "boolean"
                  },
                  "previousAddressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "isPreviousAddressLast12Month"
                ],
                "additionalProperties": false
              },
              "directorDetails": {
                "type": "array",
                "minItems": 1,
                "maxItems": 10,
                "items": {
                  "type": "object",
                  "properties": {
                    "personalDetails": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "enum": [
                            "Mr",
                            "Mrs",
                            "Miss",
                            "Ms",
                            "Dr",
                            "Sir",
                            "Professor",
                            "Lord"
                          ]
                        },
                        "firstName": {
                          "$ref": "#/definitions/nameType"
                        },
                        "middleName": {
                          "$ref": "#/definitions/nameType"
                        },
                        "lastName": {
                          "$ref": "#/definitions/nameType"
                        },
                        "dateOfBirth": {
                          "$ref": "#/definitions/dateType"
                        }
                      },
                      "required": [
                        "firstName",
                        "lastName",
                        "dateOfBirth"
                      ],
                      "additionalProperties": false
                    },
                    "referenceOrNino": {
                      "type": "string",
                      "pattern": "(^[0-9a-zA-Z]{1,9}|((?!(BG|GB|KN|NK|NT|TN|ZZ)|(D|F|I|Q|U|V)[A-Z]|[A-Z](D|F|I|O|Q|U|V))[A-Z]{2})[0-9]{6}[A-D]?)$"
                    },
                    "noNinoReason": {
                      "$ref": "#/definitions/orgOrReasonType"
                    },
                    "utr": {
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "noUtrReason": {
                      "$ref": "#/definitions/orgOrReasonType"
                    },
                    "correspondenceAddressDetails": {
                      "type": "object",
                      "properties": {
                        "addressDetails": {
                          "$ref": "#/definitions/addressType"
                        }
                      },
                      "required": [
                        "addressDetails"
                      ],
                      "additionalProperties": false
                    },
                    "correspondenceContactDetails": {
                      "type": "object",
                      "properties": {
                        "contactDetails": {
                          "$ref": "#/definitions/contactDetailsType"
                        }
                      },
                      "required": [
                        "contactDetails"
                      ],
                      "additionalProperties": false
                    },
                    "previousAddressDetails": {
                      "type": "object",
                      "properties": {
                        "isPreviousAddressLast12Month": {
                          "type": "boolean"
                        },
                        "previousAddressDetails": {
                          "$ref": "#/definitions/addressType"
                        }
                      },
                      "required": [
                        "isPreviousAddressLast12Month"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "personalDetails",
                    "correspondenceAddressDetails",
                    "correspondenceContactDetails"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "organizationName",
              "haveMoreThanTenDirectorOrPartner",
              "correspondenceAddressDetails",
              "correspondenceContactDetails",
              "directorDetails"
            ],
            "additionalProperties": false
          }
        },
        "partnership": {
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "object",
            "properties": {
              "organizationName": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "utr": {
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "noUtrReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "vatRegistrationNumber": {
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "payeReference": {
                "type": "string",
                "pattern": "^[0-9]{3}[0-9A-Za-z]{1,13}$"
              },
              "haveMoreThanTenDirectorOrPartner": {
                "description": "true: Yes, false: No",
                "type": "boolean"
              },
              "correspondenceAddressDetails": {
                "type": "object",
                "properties": {
                  "addressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "addressDetails"
                ],
                "additionalProperties": false
              },
              "correspondenceContactDetails": {
                "type": "object",
                "properties": {
                  "contactDetails": {
                    "$ref": "#/definitions/contactDetailsType"
                  }
                },
                "required": [
                  "contactDetails"
                ],
                "additionalProperties": false
              },
              "previousAddressDetails": {
                "type": "object",
                "properties": {
                  "isPreviousAddressLast12Month": {
                    "type": "boolean"
                  },
                  "previousAddressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "isPreviousAddressLast12Month"
                ],
                "additionalProperties": false
              },
              "partnerDetails": {
                "type": "array",
                "minItems": 1,
                "maxItems": 10,
                "items": {
                  "type": "object",
                  "properties": {
                    "personalDetails": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "enum": [
                            "Mr",
                            "Mrs",
                            "Miss",
                            "Ms",
                            "Dr",
                            "Sir",
                            "Professor",
                            "Lord"
                          ]
                        },
                        "firstName": {
                          "$ref": "#/definitions/nameType"
                        },
                        "middleName": {
                          "$ref": "#/definitions/nameType"
                        },
                        "lastName": {
                          "$ref": "#/definitions/nameType"
                        },
                        "dateOfBirth": {
                          "$ref": "#/definitions/dateType"
                        }
                      },
                      "required": [
                        "firstName",
                        "lastName",
                        "dateOfBirth"
                      ],
                      "additionalProperties": false
                    },
                    "referenceOrNino": {
                      "type": "string",
                      "pattern": "(^[0-9a-zA-Z]{1,9}|((?!(BG|GB|KN|NK|NT|TN|ZZ)|(D|F|I|Q|U|V)[A-Z]|[A-Z](D|F|I|O|Q|U|V))[A-Z]{2})[0-9]{6}[A-D]?)$"
                    },
                    "noNinoReason": {
                      "$ref": "#/definitions/orgOrReasonType"
                    },
                    "utr": {
                      "type": "string",
                      "pattern": "^[0-9]{10}$"
                    },
                    "noUtrReason": {
                      "$ref": "#/definitions/orgOrReasonType"
                    },
                    "correspondenceAddressDetails": {
                      "type": "object",
                      "properties": {
                        "addressDetails": {
                          "$ref": "#/definitions/addressType"
                        }
                      },
                      "required": [
                        "addressDetails"
                      ],
                      "additionalProperties": false
                    },
                    "correspondenceContactDetails": {
                      "type": "object",
                      "properties": {
                        "contactDetails": {
                          "$ref": "#/definitions/contactDetailsType"
                        }
                      },
                      "required": [
                        "contactDetails"
                      ],
                      "additionalProperties": false
                    },
                    "previousAddressDetails": {
                      "type": "object",
                      "properties": {
                        "isPreviousAddressLast12Month": {
                          "type": "boolean"
                        },
                        "previousAddressDetails": {
                          "$ref": "#/definitions/addressType"
                        }
                      },
                      "required": [
                        "isPreviousAddressLast12Month"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "personalDetails",
                    "correspondenceAddressDetails",
                    "correspondenceContactDetails"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "organizationName",
              "haveMoreThanTenDirectorOrPartner",
              "correspondenceAddressDetails",
              "correspondenceContactDetails",
              "partnerDetails"
            ],
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "trusteeDetails": {
      "description": "This Node is mandatory when the isSchemeMasterTrust is true or  schemeStructure is 01. Trustee Details should have not more than 10 Trustee (Combination of Individual Trustee, Company Trustee and Partnership Trustee <= 10. This node is applicable, if RACDACScheme = false OR RACDACScheme data element not provided",
      "type": "object",
      "properties": {
        "individualTrusteeDetail": {
          "type": "array",
          "minItems": 0,
          "maxItems": 10,
          "items": {
            "type": "object",
            "properties": {
              "personalDetails": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "enum": [
                      "Mr",
                      "Mrs",
                      "Miss",
                      "Ms",
                      "Dr",
                      "Sir",
                      "Professor",
                      "Lord"
                    ]
                  },
                  "firstName": {
                    "$ref": "#/definitions/nameType"
                  },
                  "middleName": {
                    "$ref": "#/definitions/nameType"
                  },
                  "lastName": {
                    "$ref": "#/definitions/nameType"
                  },
                  "dateOfBirth": {
                    "$ref": "#/definitions/dateType"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "dateOfBirth"
                ],
                "additionalProperties": false
              },
              "referenceOrNino": {
                "type": "string",
                "pattern": "(^[0-9a-zA-Z]{1,9}|((?!(BG|GB|KN|NK|NT|TN|ZZ)|(D|F|I|Q|U|V)[A-Z]|[A-Z](D|F|I|O|Q|U|V))[A-Z]{2})[0-9]{6}[A-D]?)$"
              },
              "noNinoReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "utr": {
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "noUtrReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "correspondenceAddressDetails": {
                "type": "object",
                "properties": {
                  "addressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "addressDetails"
                ],
                "additionalProperties": false
              },
              "correspondenceContactDetails": {
                "type": "object",
                "properties": {
                  "contactDetails": {
                    "$ref": "#/definitions/contactDetailsType"
                  }
                },
                "required": [
                  "contactDetails"
                ],
                "additionalProperties": false
              },
              "previousAddressDetails": {
                "type": "object",
                "properties": {
                  "isPreviousAddressLast12Month": {
                    "type": "boolean"
                  },
                  "previousAddressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "isPreviousAddressLast12Month"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "personalDetails",
              "correspondenceAddressDetails",
              "correspondenceContactDetails"
            ],
            "additionalProperties": false
          }
        },
        "companyTrusteeDetail": {
          "type": "array",
          "minItems": 0,
          "maxItems": 10,
          "items": {
            "type": "object",
            "properties": {
              "organizationName": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "utr": {
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "noUtrReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "crnNumber": {
                "type": "string",
                "pattern": "^[A-Za-z0-9 -]{1,8}$"
              },
              "noCrnReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "vatRegistrationNumber": {
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "payeReference": {
                "type": "string",
                "pattern": "^[0-9]{3}[0-9A-Za-z]{1,13}$"
              },
              "correspondenceAddressDetails": {
                "type": "object",
                "properties": {
                  "addressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "addressDetails"
                ],
                "additionalProperties": false
              },
              "correspondenceContactDetails": {
                "type": "object",
                "properties": {
                  "contactDetails": {
                    "$ref": "#/definitions/contactDetailsType"
                  }
                },
                "required": [
                  "contactDetails"
                ],
                "additionalProperties": false
              },
              "previousAddressDetails": {
                "type": "object",
                "properties": {
                  "isPreviousAddressLast12Month": {
                    "type": "boolean"
                  },
                  "previousAddressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "isPreviousAddressLast12Month"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "organizationName",
              "correspondenceAddressDetails",
              "correspondenceContactDetails"
            ],
            "additionalProperties": false
          }
        },
        "partnershipTrusteeDetail": {
          "type": "array",
          "minItems": 0,
          "maxItems": 10,
          "items": {
            "type": "object",
            "properties": {
              "organizationName": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "utr": {
                "type": "string",
                "pattern": "^[0-9]{10}$"
              },
              "noUtrReason": {
                "$ref": "#/definitions/orgOrReasonType"
              },
              "vatRegistrationNumber": {
                "type": "string",
                "pattern": "^[0-9]{9}$"
              },
              "payeReference": {
                "type": "string",
                "pattern": "^[0-9]{3}[0-9A-Za-z]{1,13}$"
              },
              "correspondenceAddressDetails": {
                "type": "object",
                "properties": {
                  "addressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "addressDetails"
                ],
                "additionalProperties": false
              },
              "correspondenceContactDetails": {
                "type": "object",
                "properties": {
                  "contactDetails": {
                    "$ref": "#/definitions/contactDetailsType"
                  }
                },
                "required": [
                  "contactDetails"
                ],
                "additionalProperties": false
              },
              "previousAddressDetails": {
                "type": "object",
                "properties": {
                  "isPreviousAddressLast12Month": {
                    "type": "boolean"
                  },
                  "previousAddressDetails": {
                    "$ref": "#/definitions/addressType"
                  }
                },
                "required": [
                  "isPreviousAddressLast12Month"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "organizationName",
              "correspondenceAddressDetails",
              "correspondenceContactDetails"
            ],
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "definitions": {
    "addressType": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string",
              "enum": [
                "NON-UK"
              ]
            },
            "line1": {
              "$ref": "#/definitions/addressLineType"
            },
            "line2": {
              "$ref": "#/definitions/addressLineType"
            },
            "line3": {
              "$ref": "#/definitions/addressLineType"
            },
            "line4": {
              "$ref": "#/definitions/addressLineType"
            },
            "postalCode": {
              "description": "This is populated if the address supplied is a NON-UK address.",
              "type": "string",
              "minLength": 1,
              "maxLength": 10
            },
            "countryCode": {
              "$ref": "#/definitions/countryCodes"
            }
          },
          "required": [
            "addressType",
            "line1",
            "line2",
            "countryCode"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "addressType": {
              "type": "string",
              "enum": [
                "UK"
              ]
            },
            "line1": {
              "$ref": "#/definitions/addressLineType"
            },
            "line2": {
              "$ref": "#/definitions/addressLineType"
            },
            "line3": {
              "$ref": "#/definitions/addressLineType"
            },
            "line4": {
              "$ref": "#/definitions/addressLineType"
            },
            "postalCode": {
              "description": "This is populated if the address supplied is a UK address.",
              "type": "string",
              "pattern": "^[A-Z]{1,2}[0-9][0-9A-Z]?\\s?[0-9][A-Z]{2}$|BFPO\\s?[0-9]{1,3}$"
            },
            "countryCode": {
              "$ref": "#/definitions/countryCodes"
            }
          },
          "required": [
            "addressType",
            "line1",
            "line2",
            "postalCode",
            "countryCode"
          ],
          "additionalProperties": false
        }
      ]
    },
    "nameType": {
      "type": "string",
      "pattern": "^[a-zA-Z &`\\-\\'\\.^]{1,35}$"
    },
    "orgOrReasonType": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9À-ÿ !#$%&'‘’\"“”«»()*+,./:;=?@\\[\\]|~£€¥\\u005C—–‐_^`-]{1,160}$"
    },
    "addressLineType": {
      "type": "string",
      "pattern": "^[A-Za-z0-9 &!'‘’\"“”(),./—–‐-]{1,35}$"
    },
    "dateType": {
      "type": "string",
      "pattern": "^(((19|20)([2468][048]|[13579][26]|0[48])|2000)[-]02[-]29|((19|20)[0-9]{2}[-](0[469]|11)[-](0[1-9]|1[0-9]|2[0-9]|30)|(19|20)[0-9]{2}[-](0[13578]|1[02])[-](0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}[-]02[-](0[1-9]|1[0-9]|2[0-8])))$"
    },
    "contactDetailsType": {
      "type": "object",
      "properties": {
        "telephone": {
          "type": "string",
          "pattern": "^[0-9 ()+--]{1,24}$"
        },
        "mobileNumber": {
          "type": "string",
          "pattern": "^[0-9 ()+--]{1,24}$"
        },
        "fax": {
          "type": "string",
          "pattern": "^[0-9 ()+--]{1,24}$"
        },
        "email": {
          "type": "string",
          "minLength": 3,
          "maxLength": 132,
          "format": "email"
        }
      },
      "required": [
        "telephone",
        "email"
      ],
      "additionalProperties": false
    },
    "countryCodes": {
      "description": "Country code iso 3166-1 alpha-2",
      "type": "string",
      "enum": [
        "AD",
        "AE",
        "AF",
        "AG",
        "AI",
        "AL",
        "AM",
        "AN",
        "AO",
        "AQ",
        "AR",
        "AS",
        "AT",
        "AU",
        "AW",
        "AX",
        "AZ",
        "BA",
        "BB",
        "BD",
        "BE",
        "BF",
        "BG",
        "BH",
        "BI",
        "BJ",
        "BL",
        "BM",
        "BN",
        "BO",
        "BQ",
        "BR",
        "BS",
        "BT",
        "BV",
        "BW",
        "BY",
        "BZ",
        "CA",
        "CC",
        "CD",
        "CF",
        "CG",
        "CH",
        "CI",
        "CK",
        "CL",
        "CM",
        "CN",
        "CO",
        "CR",
        "CS",
        "CU",
        "CV",
        "CW",
        "CX",
        "CY",
        "CZ",
        "DE",
        "DJ",
        "DK",
        "DM",
        "DO",
        "DZ",
        "EC",
        "EE",
        "EG",
        "EH",
        "ER",
        "ES",
        "ET",
        "EU",
        "FC",
        "FI",
        "FJ",
        "FK",
        "FM",
        "FO",
        "FR",
        "GA",
        "GB",
        "GD",
        "GE",
        "GF",
        "GG",
        "GH",
        "GI",
        "GL",
        "GM",
        "GN",
        "GP",
        "GQ",
        "GR",
        "GS",
        "GT",
        "GU",
        "GW",
        "GY",
        "HK",
        "HM",
        "HN",
        "HR",
        "HT",
        "HU",
        "ID",
        "IE",
        "IL",
        "IM",
        "IN",
        "IO",
        "IQ",
        "IR",
        "IS",
        "IT",
        "JE",
        "JM",
        "JO",
        "JP",
        "KE",
        "KG",
        "KH",
        "KI",
        "KM",
        "KN",
        "KP",
        "KR",
        "KW",
        "KY",
        "KZ",
        "LA",
        "LB",
        "LC",
        "LI",
        "LK",
        "LR",
        "LS",
        "LT",
        "LU",
        "LV",
        "LY",
        "MA",
        "MC",
        "MD",
        "ME",
        "MF",
        "MG",
        "MH",
        "MK",
        "ML",
        "MM",
        "MN",
        "MO",
        "MP",
        "MQ",
        "MR",
        "MS",
        "MT",
        "MU",
        "MV",
        "MW",
        "MX",
        "MY",
        "MZ",
        "NA",
        "NC",
        "NE",
        "NF",
        "NG",
        "NI",
        "NL",
        "NO",
        "NP",
        "NR",
        "NT",
        "NU",
        "NZ",
        "OM",
        "OR",
        "PA",
        "PE",
        "PF",
        "PG",
        "PH",
        "PK",
        "PL",
        "PM",
        "PN",
        "PR",
        "PS",
        "PT",
        "PW",
        "PY",
        "QA",
        "RE",
        "RO",
        "RS",
        "RU",
        "RW",
        "SA",
        "SB",
        "SC",
        "SD",
        "SE",
        "SG",
        "SH",
        "SI",
        "SJ",
        "SK",
        "SL",
        "SM",
        "SN",
        "SO",
        "SR",
        "SS",
        "ST",
        "SV",
        "SX",
        "SY",
        "SZ",
        "TC",
        "TD",
        "TF",
        "TG",
        "TH",
        "TJ",
        "TK",
        "TL",
        "TM",
        "TN",
        "TO",
        "TP",
        "TR",
        "TT",
        "TV",
        "TW",
        "TZ",
        "UA",
        "UG",
        "UM",
        "UN",
        "US",
        "UY",
        "UZ",
        "VA",
        "VC",
        "VE",
        "VG",
        "VI",
        "VN",
        "VU",
        "WF",
        "WS",
        "YE",
        "YT",
        "ZA",
        "ZM",
        "ZW",
        "ZZ"
      ]
    }
  }
}