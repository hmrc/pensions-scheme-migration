# microservice specific routes

GET           /lock                                 controllers.cache.LockCacheController.getLock
POST          /lock                                 controllers.cache.LockCacheController.lock
DELETE        /lock                                 controllers.cache.LockCacheController.removeLock()

GET           /lock-by-user                         controllers.cache.LockCacheController.getLockByUser
DELETE        /lock-by-user                         controllers.cache.LockCacheController.removeLockByUser()
GET           /lock-on-scheme                       controllers.cache.LockCacheController.getLockOnScheme
DELETE        /lock-on-scheme                       controllers.cache.LockCacheController.removeLockOnScheme()

GET           /migration-data                       controllers.cache.DataCacheController.get
POST          /migration-data                       controllers.cache.DataCacheController.save
DELETE        /migration-data                       controllers.cache.DataCacheController.remove

GET           /scheme-data                          controllers.cache.SchemeDataCacheController.get
POST          /scheme-data                          controllers.cache.SchemeDataCacheController.save
DELETE        /scheme-data                          controllers.cache.SchemeDataCacheController.remove

GET           /list-of-schemes                      controllers.SchemeController.listOfLegacySchemes
GET           /getLegacySchemeDetails               controllers.LegacySchemeDetailsController.getLegacySchemeDetails

POST          /bulk-migration                       controllers.BulkRacDacController.migrateAllRacDac
GET           /bulk-migration/isRequestInProgress    controllers.BulkRacDacController.isRequestSubmitted
GET           /bulk-migration/isAllFailed           controllers.BulkRacDacController.isAllFailed
DELETE        /bulk-migration/deleteAll             controllers.BulkRacDacController.deleteAll

POST          /email-response/:journeyType/:id      controllers.EmailResponseController.retrieveStatus(journeyType: JourneyType.Name, id: String)
